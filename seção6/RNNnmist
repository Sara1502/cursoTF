import tensorflow as tf
from keras._tf_keras.keras.layers import Input, SimpleRNN, GRU, LSTM, Dense, Flatten
from keras._tf_keras.keras.models import Model
from keras._tf_keras.keras.optimizers import SGD, Adam

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

mnist = tf.keras.datasets.mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train // 255.0, x_test // 255.0
print('x_train.shape ', x_train.shape)

i = Input(shape=x_train[0].shape)
x = LSTM(128) (i)
x = Dense(10, activation='softmax') (x)

model = Model(i, x)

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
r = model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10)

plt.plot(r.history['loss'], label='loss')
plt.plot(r.history['val_loss'], label='val_loss')
plt.legend()
plt.show()

plt.plot(r.history['accuracy'], label='acc')
plt.plot(r.history['val_accuracy'], label='val_acc')
plt.legend()
plt.show()